# Generated by Django 2.0.2 on 2018-03-27 08:44

import AnyTimeGridSearchCV.grids.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('grids', '0007_cvresults_scores'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cvresult',
            name='errors',
            field=models.TextField(blank=True, help_text='Various errors that happened in the run', null=True),
        ),
        migrations.AlterField(
            model_name='cvresult',
            name='fit_time',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=0.0), default=list, help_text='Estimator fit time on cross validation', size=None),
        ),
        migrations.AlterField(
            model_name='cvresult',
            name='gridsearch',
            field=models.ForeignKey(help_text='The GridSearch instance that this result belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='results', to='grids.GridSearch'),
        ),
        migrations.AlterField(
            model_name='cvresult',
            name='params',
            field=django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Dictionary of hyperparameters for the estimator'),
        ),
        migrations.AlterField(
            model_name='cvresult',
            name='score_time',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=0.0), default=list, help_text='Estimator score time on cross validation', size=None),
        ),
        migrations.AlterField(
            model_name='cvresultscore',
            name='cv_result',
            field=models.ForeignKey(help_text='The CVResult instance that the score belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='grids.CVResult'),
        ),
        migrations.AlterField(
            model_name='cvresultscore',
            name='score',
            field=models.FloatField(default=0.0, help_text='Mean score for cross validation'),
        ),
        migrations.AlterField(
            model_name='cvresultscore',
            name='scorer',
            field=models.CharField(help_text='Score function name', max_length=256),
        ),
        migrations.AlterField(
            model_name='cvresultscore',
            name='test_scores',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=0.0), default=list, help_text='Cross validation test scores', size=None),
        ),
        migrations.AlterField(
            model_name='cvresultscore',
            name='train_scores',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=0.0), default=list, help_text='Cross validation train scores', size=None),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='examples',
            field=models.FileField(help_text='Examples file', upload_to=AnyTimeGridSearchCV.grids.models._path_to_upload_train),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='labels',
            field=models.FileField(help_text='Labels file', upload_to=AnyTimeGridSearchCV.grids.models._path_to_upload_test),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='name',
            field=models.CharField(help_text='Dataset name', max_length=256, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='gridsearch',
            name='classifier',
            field=models.CharField(help_text='scikit-learn estimator name', max_length=128),
        ),
        migrations.AlterField(
            model_name='gridsearch',
            name='dataset',
            field=models.ForeignKey(blank=True, help_text='The dataset on which the GridSearch will run', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grid_searches', to='grids.DataSet'),
        ),
        migrations.AlterField(
            model_name='gridsearch',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the GridSearch', primary_key=True, serialize=False),
        ),
    ]
